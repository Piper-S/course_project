version: '3'
services:
  rstudio:
    image: "rocker/rstudio"
    ports: 
      - '10001:8787'
    environment:
      - PASSWORD=123
    volumes:
      - ./:/usr/src/app
  jupyter:
    image: "jupyter/datascience-notebook:9b06df75e445"
    # environment:
    #   - JUPYTER_TOKEN=easy
    #   - JUPYTER_ENABLE_LAB=yes
    environment:
      - JUPYTER_TOKEN=easy
    ports: 
      - '10000:8888'
    restart: always
    volumes:
      - ./:/usr/src/app
#### Spyder:
  # spyder:
  #   build: ./spyder
  #   environment:
  #     - DISPLAY=${HOSTNAME}:0
  #   volumes:
  #     - /tmp/.X11-unix:/tmp/.X11-unix
  #   ports: 
  #     - '6080:6080'
#### IBM SAS:
  # https://www.pdesas.org/Profile/Account/Login
#### Git 
  git:
    image: ellerbrock/alpine-bash-git
    # environment:
    #   - JUPYTER_TOKEN=easy
    volumes:
      - ./:/usr/src/app
#### Orange -> password = orange
  orange:
    image: acopar/orange-docker
    ports: 
      - '5901:5901'
      - '6901:6901'
    # environment:
    #   - DISPLAY=host.docker.internal:0
    # volumes:
    #   - /tmp/.X11-unix:/tmp/.X11-unix

#### Visual Studio Code 
  # vscode:
  #   image: elcolio/vscode
  #   environment:
  #     - DISPLAY=host.docker.internal:0
  #   volumes:
  #     - /tmp/.X11-unix:/tmp/.X11-unix
  vscode:
    image: ghcr.io/linuxserver/code-server
    ports:
      - 8443:8443
    # restart: unless-stopped
    volumes:
      - ./:/usr/src/app
      # https://hub.docker.com/r/codercom/code-server
#### Apache Hadoop : sequenceiq/hadoop-docker
  # hadoop:
  #   image: apache/hadoop-runner
  #   volumes:
  #     - ./:/usr/src/app
#### Apache Spark 
# https://github.com/jupyter/docker-stacks
  spark:
    image: dimajix/jupyter-spark:latest
    ports: 
      - "9433:8888"
    volumes:
      - ./:/usr/src/app
#### Tableau 
    # just a link
#### SonarQube & SonarScanner 
  sonarsonar:
    image: owasp/sonarqube
    ports: 
      - '9000:9000'
      - '9092:9092'
    volumes:
      - ./:/usr/src/app

  # postgresql:
  #   image: 'bitnami/postgresql:latest'
  #   environment:
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     - POSTGRESQL_USER=bn_sonarqube
  #     - POSTGRESQL_DATABASE=bitnami_sonarqube
  #     - POSTGRESQL_PASSWORD=bitnami1234
  #   volumes:
  #     - ./:/bitnami/postgresql
  # sonarqube:
  #   image: bitnami/sonarqube:latest
  #   depends_on:
  #     - postgresql
  #   ports:
  #     - '9000:9000'
  #   environment:
  #     - SONARQUBE_DATABASE_USER=bn_sonarqube
  #     - SONARQUBE_DATABASE_NAME=bitnami_sonarqube
  #     - SONARQUBE_DATABASE_PASSWORD=bitnami1234
  #     - ALLOW_EMPTY_PASSWORD=yes
  #   volumes:
  #     - ./:/bitnami
#### Tensorflow -> done
  tensorflow:
    build: ./TensorFlowFolder
    environment:
      - JUPYTER_TOKEN=easy
    ports: 
      - '9432:8888'
    volumes:
      - ./:/usr/src/app

#### Markdown
  markdown:
    image: alexsuch/markdown-editor:1.0.1
    ports: 
      - '9090:80'
    volumes:
      - ./:/usr/src/app
#### word press
  # db:
  #   image: mysql:5.7
  #   volumes:
  #     - db_data:/var/lib/mysql
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: somewordpress
  #     MYSQL_DATABASE: wordpress
  #     MYSQL_USER: wordpress
  #     MYSQL_PASSWORD: wordpress

  # wordpress:
  #   depends_on:
  #     - db
  #   image: wordpress:latest
  #   ports:
  #     - "8001:80"
  #   restart: always
  #   environment:
  #     WORDPRESS_DB_HOST: db:3306
  #     WORDPRESS_DB_USER: wordpress
  #     WORDPRESS_DB_PASSWORD: wordpress
  #     WORDPRESS_DB_NAME: wordpress
#### main program
  myapp:
    build: .
    ports:
      - "8000:3000"

# volumes:
#     db_data: {}      
