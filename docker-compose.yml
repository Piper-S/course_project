version: '3'

# networks:
#   mynetwork:
#     ipam:
#       config:
#         - subnet: 172.20.0.0/24

services:
### Rstudio:
  rstudio:
    image: "rocker/rstudio"
    ports: 
      - '10001:8787'
    environment:
      DISABLE_AUTH: "true"
      # - PASSWORD=123
    volumes:
      - ./:/usr/src/app
#### Jupyter:
  jupyter:
    image: "jupyter/datascience-notebook:9b06df75e445"
    environment:
      - JUPYTER_TOKEN=easy
    ports: 
      - '10000:8888'
    restart: always
    volumes:
      - ./:/usr/src/app
#### Spyder:
  # spyder:
  #   build: ./spyder
  #   environment:
  #     - DISPLAY=${HOSTNAME}:0
  #   volumes:
  #     - /tmp/.X11-unix:/tmp/.X11-unix
  #   ports: 
  #     - '6080:6080'
#### IBM SAS:
  # https://www.pdesas.org/Profile/Account/Login
#### Git 
  git:
    image: ellerbrock/alpine-bash-git
    volumes:
      - ./:/usr/src/app
#### Orange -> password = orange
  orange:
    image: acopar/orange-docker
    ports: 
      - '5901:5901'
      - '6901:6901'
    volumes:
      - ./:/usr/src/app
#### Visual Studio Code 
  # vscode:
  #   image: elcolio/vscode
  #   environment:
  #     - DISPLAY=host.docker.internal:0
  #   volumes:
  #     - /tmp/.X11-unix:/tmp/.X11-unix
  vscode:
    image: ghcr.io/linuxserver/code-server
    ports:
      - 8443:8443
    # restart: unless-stopped
    volumes:
      - ./:/usr/src/app
### Apache Hadoop &Apache Spark 
  spark:
    image: dimajix/jupyter-spark:latest
    ports: 
      - "9433:8888"
    volumes:
      - ./:/usr/src/app
#### Tableau 
    # a link
#### SonarQube & SonarScanner 
  sonarsonar:
    image: owasp/sonarqube
    # image: zaquestion/sonarqube-python
    ports: 
      - '10010:9000'
      - '9092:9092'
    volumes:
      - ./:/usr/src/app
#### Tensorflow -> done pip show tensorflow
  tensorflow:
    build: ./TensorFlowFolder
    environment:
      - JUPYTER_TOKEN=easy
    ports: 
      - '9432:8888'
    volumes:
      - ./:/usr/src/app
#### Markdown
  markdown:
    image: alexsuch/markdown-editor:1.0.1
    ports: 
      - '9090:80'
    volumes:
      - ./:/usr/src/app
# vde2020
  hadoop:
    image: pipers/myvnc
    container_name: namenode
    ports: 
      - "10008:5901"
      - "10009:6901"
      - "8042"
      - "8088"
      - "19888"
      - "50070"
      - "50075"
#     environment:
#       - CLUSTER_NAME=test
#     env_file:
#       - ./hadoop.env
#     # volumes:
#     #   - ./:/usr/src/app
#   datanode:
#     image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
#     container_name: datanode
#     restart: always
#     volumes:
#       - hadoop_datanode:/hadoop/dfs/data
#     environment:
#       SERVICE_PRECONDITION: "namenode:9870"
#     env_file:
#       - ./hadoop.env
  
#   resourcemanager:
#     image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
#     container_name: resourcemanager
#     restart: always
#     environment:
#       SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
#     env_file:
#       - ./hadoop.env

#   nodemanager1:
#     image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
#     container_name: nodemanager
#     restart: always
#     environment:
#       SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
#     env_file:
#       - ./hadoop.env
  
#   historyserver:
#     image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
#     container_name: historyserver
#     restart: always
#     environment:
#       SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
#     volumes:
#       - hadoop_historyserver:/hadoop/yarn/timeline
#     env_file:
#       - ./hadoop.env
  
# volumes:
#   hadoop_namenode:
#   hadoop_datanode:
#   hadoop_historyserver:

### main program
  myapp:
    build: .
    ports:
      - "8000:3000"
    # networks:
    #   mynetwork:
    #     ipv4_address: 172.20.0.8